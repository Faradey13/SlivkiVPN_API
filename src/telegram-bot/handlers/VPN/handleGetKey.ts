import { Injectable } from '@nestjs/common';
import { Action, Ctx, Update } from 'nestjs-telegraf';
import { Context, Markup } from 'telegraf';
import { UserService } from '../../../user/user.service';
import { PrismaService } from '../../../prisma/prisma.service';
import { RegionService } from '../../../region/region.service';

@Injectable()
@Update()
export class GetKeyHandler {
  constructor(
    private readonly userService: UserService,
    private readonly prisma: PrismaService,
    private readonly region: RegionService,
  ) {}
  @Action('get_key')
  async handleGetKey(@Ctx() ctx: Context) {
    const user = await this.userService.getUserByTgId(ctx.from.id);
    const vpnKey = await this.prisma.vpn_keys.findFirst({
      where: { user_id: user.id, is_active: true },
    });
    const region = await this.region.getRegionById(vpnKey.region_id);

    const text = `
–í–∞—à –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª—é—á
–†–µ–≥–∏–æ–Ω - ${region.region_name} ${region.flag}

 <code><a href="tg://copy?text=${vpnKey.key}">${vpnKey.key}</a></code>

–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ, –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–ª—é—Å–∏–∫ –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É.

–î–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª—é—á–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.
    `;

    const keyboard = {
      inline_keyboard: [
        [Markup.button.callback('üì± –°–∫–∞—á–∞—Ç—å Outline', 'download_outline')],
        [Markup.button.callback('‚è™ –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')],
      ],
    };

    await ctx.editMessageText(text, {
      parse_mode: 'HTML',
      reply_markup: keyboard,
    });
  }
}
