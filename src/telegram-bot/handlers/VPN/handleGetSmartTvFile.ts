import { Injectable } from '@nestjs/common';
import { Action, Ctx, Update } from 'nestjs-telegraf';
import { Context, Markup } from 'telegraf';
import * as fs from 'fs';
import { PrismaService } from '../../../prisma/prisma.service';
import { TelegramBotUtils } from '../../telegram-bot.utils';
import { UserService } from '../../../user/user.service';
import { PinoLogger } from 'nestjs-pino';

@Injectable()
@Update()
export class SmartTvFileHandler {
  constructor(
    private readonly logger: PinoLogger,
    private readonly prisma: PrismaService,
    private readonly botUtils: TelegramBotUtils,
    private readonly userService: UserService,
  ) {
    this.logger.setContext(SmartTvFileHandler.name);
  }
  @Action(/^get_smartTv_file:(\d+)$/)
  async handleGetSmartTvFile(@Ctx() ctx: Context) {
    const user = await this.userService.getUserByTgId(ctx.from.id);
    this.logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: ${user.id} –∑–∞—à–µ–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN –Ω–∞ smart TV`);
    const region = await this.botUtils.getRegion(ctx);

    if (!region) {
      this.logger.info(`–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: ${user.id} –Ω–µ –≤—ã–±—Ä–∞–Ω —Ä–µ–≥–∏–æ–Ω`);
      await ctx.editMessageText(
        '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä–µ–≥–∏–æ–Ω –¥–ª—è –≤—ã–¥–∞—á–∏ –∫–ª—é—á–∞, –≤—ã–±–µ—Ä–µ—Ç–µ —Ä–µ–≥–∏–æ–Ω',
        Markup.inlineKeyboard([
          [Markup.button.callback(' –í—ã–±—Ä–∞—Ç—å —Ä–µ–≥–∏–æ–Ω', 'select_region')],
          [Markup.button.callback('‚è™ –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')],
        ]),
      );
      return;
    }

    const smartTvVpnKey = await this.prisma.vpn_keys.findFirst({
      where: {
        user_id: user.id,
        region_id: region.id,
      },
    });

    if (!smartTvVpnKey) {
      this.logger.info(`–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: ${user.id} –Ω–µ –≤—ã–±—Ä–∞–Ω –Ω–∞–π–¥–µ–Ω VPN –∫–ª—é—á `);
      await ctx.editMessageText(
        '–ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, ' +
          '–µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞ –∞ –∫–ª—é—á –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
        Markup.inlineKeyboard([[Markup.button.callback('‚è™ –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')]]),
      );
      return;
    }

    const filePath = await this.botUtils.convertOutlineToJson(smartTvVpnKey.key, user.id);
    console.log(filePath);
    this.logger.info(`–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: ${user.id}`);
    if (!fs.existsSync(filePath)) {
      await ctx.editMessageText('–§–∞–π–ª –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      this.logger.error(`–û—à–∏–±–∫–∞ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: ${user.id}`);
      return;
    }
    const text = `
–í–∞—à –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª—é—á
–†–µ–≥–∏–æ–Ω - ${region.region_name} ${region.flag}

–û–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ–∞–π–ª–µ

–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–æ–π —Ç–µ–ª–µ–≤–∏–∑–æ—Ä –ø–æ –º–∞–∫—Å–∏–º—É–º—É!
  `;

    try {
      const keyboard = Markup.inlineKeyboard([
        [
          Markup.button.url(
            'üì∫ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è',
            'https://telegra.ph/Instrukciya-po-ustanovke-Slivki-VPN-na-Smart-TV-09-24',
          ),
        ],
        [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'get_smartTv_file')],
        [Markup.button.callback('‚è™ –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')],
      ]);

      await ctx.editMessageText(text, keyboard);
      await ctx.replyWithDocument({ source: filePath }, { caption: '–í–∞—à Smart TV VPN –∫–ª—é—á –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON' });

      if (fs.existsSync(filePath)) {
        fs.unlinkSync(filePath);
      }
      this.logger.info(`–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: ${user.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω`);
    } catch (error) {
      this.logger.error(
        `–û—à–∏–±–∫–∞ –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: ${user.id}, –æ—à–∏–±–∫–∞: ${error.message}`,
      );
      await ctx.editMessageText('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    }
  }
}
