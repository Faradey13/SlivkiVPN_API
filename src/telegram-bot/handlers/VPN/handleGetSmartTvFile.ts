import { Injectable } from '@nestjs/common';
import { Action, Ctx, Update } from 'nestjs-telegraf';
import { Context, Markup } from 'telegraf';
import * as fs from 'fs';
import { PrismaService } from '../../../prisma/prisma.service';
import { TelegramBotUtils } from '../../telegram-bot.utils';
import { UserService } from '../../../user/user.service';

@Injectable()
@Update()
export class SmartTvFileHandler {
  constructor(
    private readonly prisma: PrismaService,
    private readonly botUtils: TelegramBotUtils,
    private readonly userService: UserService,
  ) {}
  @Action(/^get_smartTv_file:(\d+)$/)
  async handleGetSmartTvFile(@Ctx() ctx: Context) {
    const user = await this.userService.getUserByTgId(ctx.from.id);
    const region = await this.botUtils.getRegion(ctx);

    if (!region) {
      await ctx.editMessageText('–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞');
      return;
    }

    const smartTvVpnKey = await this.prisma.vpn_keys.findFirst({
      where: {
        user_id: user.id,
        region_id: region.id,
      },
    });

    if (!smartTvVpnKey) {
      await ctx.editMessageText('–ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      return;
    }

    const filePath = await this.botUtils.convertOutlineToJson(smartTvVpnKey.key, user.id);
    console.log(filePath);

    if (!fs.existsSync(filePath)) {
      await ctx.editMessageText('–§–∞–π–ª –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      return;
    }
    const text = `
–í–∞—à –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª—é—á
–†–µ–≥–∏–æ–Ω - ${region.region_name} ${region.flag}

–û–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ–∞–π–ª–µ

–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–æ–π —Ç–µ–ª–µ–≤–∏–∑–æ—Ä –ø–æ –º–∞–∫—Å–∏–º—É–º—É!
  `;

    try {
      const keyboard = Markup.inlineKeyboard([
        [
          Markup.button.url(
            'üì∫ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è',
            'https://telegra.ph/Instrukciya-po-ustanovke-Slivki-VPN-na-Smart-TV-09-24',
          ),
        ],
        [Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'get_smartTv_file')],
        [Markup.button.callback('‚è™ –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')],
      ]);

      await ctx.editMessageText(text, keyboard);
      await ctx.replyWithDocument({ source: filePath }, { caption: '–í–∞—à Smart TV VPN –∫–ª—é—á –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON' });

      if (fs.existsSync(filePath)) {
        fs.unlinkSync(filePath);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞:', error);
      await ctx.editMessageText('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    }
  }
}
