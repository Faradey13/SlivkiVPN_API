import { Injectable } from '@nestjs/common';
import { Action, Ctx, Update } from 'nestjs-telegraf';
import { Context, Markup } from 'telegraf';
import { UserService } from '../../../user/user.service';
import { PrismaService } from '../../../prisma/prisma.service';

@Injectable()
@Update()
export class ReferralHandlers {
  constructor(
    private readonly userService: UserService,
    private readonly prisma: PrismaService,
  ) {}
  @Action('referral')
  async handleReferral(@Ctx() ctx: Context) {
    const user = await this.userService.getUserByTgId(ctx.from.id);
    const refUser = await this.prisma.referral_user.findUnique({
      where: { user_id: user.id },
    });
    const referralUser = await this.prisma.referral_user.findUnique({
      where: { user_id: user.id },
    });
    const myReferralCode = await this.prisma.promo_codes.findUnique({
      where: { id: referralUser.code_out_id },
    });

    const text = `

üí∏ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ñ–æ—Ä–º–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –º–µ—Å—è—Ü –∏–ª–∏ –±–æ–ª–µ–µ, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 
–æ–¥–∏–Ω –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–µ—Å—è—Ü, –∞ –≤–∞—à –¥—Ä—É–≥ —Ä–∞–∑–æ–≤—É—é 
—Å–∫–∏–¥–∫—É 50% –Ω–∞ –ª—é–±—É—é –ø–æ–¥–ø–∏—Å–∫—É.

–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: 
<code><a href="tg://copy?text=${myReferralCode.code}">${myReferralCode.code}</a></code>

–î–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.

–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π: ${refUser.referral_count}
    `;

    const keyboard = {
      inline_keyboard: [[Markup.button.callback('‚è™ –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')]],
    };

    await ctx.editMessageText(text, {
      parse_mode: 'HTML',
      reply_markup: keyboard,
    });
  }
}
